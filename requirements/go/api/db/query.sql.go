// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package db

import (
	"context"
)

const createPoll = `-- name: CreatePoll :exec
INSERT INTO Poll(id, title, createAt, updateAt)
VALUES($1, $2, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
`

type CreatePollParams struct {
	ID    string
	Title string
}

func (q *Queries) CreatePoll(ctx context.Context, arg CreatePollParams) error {
	_, err := q.db.ExecContext(ctx, createPoll, arg.ID, arg.Title)
	return err
}

const createUser = `-- name: CreateUser :exec
INSERT INTO Users(Id, Name, Surname, Nickname, Email, Password, CreateAt)
VALUES($1, $2, $3, $4, $5, $6, CURRENT_TIMESTAMP)
`

type CreateUserParams struct {
	ID       string
	Name     string
	Surname  string
	Nickname string
	Email    string
	Password string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser,
		arg.ID,
		arg.Name,
		arg.Surname,
		arg.Nickname,
		arg.Email,
		arg.Password,
	)
	return err
}

const getPoll = `-- name: GetPoll :one
SELECT title FROM poll
WHERE id = $1
`

func (q *Queries) GetPoll(ctx context.Context, id string) (string, error) {
	row := q.db.QueryRowContext(ctx, getPoll, id)
	var title string
	err := row.Scan(&title)
	return title, err
}
